" ENVIRONMENT {{{1
let s:bin_name = fnamemodify($_, ":t")

" KEYBINDINGS {{{1
" Map Leader
let mapleader = ','
let g:mapleader = ','

nmap j gj
nmap k gk
nmap <space> za

nmap <Leader>b :Buffers<CR>
nmap <Leader>t :Files<CR>
nmap <Leader>r :Tags<CR>
nmap <Leader>nn :NERDTreeToggle<CR>

nnoremap <C-n> :call NumberToggle()<cr>

" GENERAL {{{1
set autoindent                              " Use indention from the previous line
set autoread                                " Detect when a file is changed
set backspace=indent,eol,start              " Fix backspace
set clipboard=unnamed                       " Use the system clipboard for yank
set cmdheight=2                             " Display 2 lines under lightline
set encoding=utf8                           " Always use uft8
set expandtab                               " Convert tabs to spaces
set foldtext=NeatFoldText()                 " Use custom fold text function
set hidden                                  " Allow switching buffers without saving
set history=100                             " Set the history to 100 entries
set hlsearch                                " Highlight search results
set laststatus=2                            " Always show the status bar
set modelines=2                             " Read vim settings from first or last 2 lines of file
set mouse=a                                 " Enable mouse in all modes
set nobackup                                " Don't store additional backup files
set noshowmode                              " We don't need to show the mode when using lightline
set number                                  " Show the line number
set ruler                                   " Show row,col&percentage
set scrolloff=1                             " Always show 1 line before/after cursor
set sidescrolloff=5                         " Always show 5 chars before/after cursor
set shiftwidth=4                            " Use 4 spaces for tab
set softtabstop=4                           " Use 4 spaces for tab
set splitbelow                              " New horizontal splits to spawn below of the current window
set splitright                              " New vertical splits to spawn to the right of the current window
set nostartofline                           " Keep the cursor relative to the last position when jumping lines
set textwidth=0                             " Set the textwidth to 0 to disable line breaking
set tabstop=4                               " Use 4 spaces for tab
set wildmenu                                " Show possible completions on command line
set wildmode=list:longest,full              " List all options and complete

syntax enable
filetype indent on
filetype plugin on

" FUNCTIONS {{{1
function! NumberToggle()
    if(&relativenumber == 1)
        set norelativenumber
    else
        set relativenumber
    endif
endfunc

function! NeatFoldText()
    let line = ' ' . substitute(getline(v:foldstart), '^\s*"\?\s*\|\s*"\?\s*{{' . '{\d*\s*', '', 'g') . ' '
    let lines_count = v:foldend - v:foldstart + 1
    let lines_count_text = '| ' . printf("%10s", lines_count . ' lines') . ' |'
    let foldchar = matchstr(&fillchars, 'fold:\zs.')
    let foldtextstart = strpart('+' . repeat(foldchar, (v:foldlevel-1)*0) . line, 0, (winwidth(0)*2)/3)
    let foldtextend = lines_count_text . repeat(foldchar, 8)
    let foldtextlength = strlen(substitute(foldtextstart . foldtextend, '.', 'x', 'g')) + &foldcolumn
    return foldtextstart . repeat(foldchar, winwidth(0)-foldtextlength) . foldtextend
endfunction

" PLUGINS {{{1
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

" Local paths are just added to the rtp even if they don't exist
Plug '/usr/local/opt/fzf'
Plug '~/.fzf'

Plug 'airblade/vim-gitgutter'
Plug 'benmills/vimux'
Plug 'easymotion/vim-easymotion'
Plug 'flazz/vim-colorschemes'
Plug 'junegunn/fzf.vim'
Plug 'mbbill/undotree'
Plug 'mileszs/ack.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'itchyny/lightline.vim'
Plug 'sheerun/vim-polyglot'
Plug 'scrooloose/nerdtree', { 'on': ['NERDTreeToggle', 'NERDTreeFind'] }
"    Plug 'w0rp/ale'

call plug#end()

" PLUGIN SETTINGS {{{1
let g:ackprg = 'rg --vimgrep --no-heading'

let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ }

let g:gitgutter_sign_added = '•'
let g:gitgutter_sign_modified = '•'
let g:gitgutter_sign_removed = '•'
let g:gitgutter_sign_modified_removed = '•'

" UI {{{1
colorscheme darkblue
silent! colorscheme hybrid                  " Use hybrid if it is loaded

" The annoying bell
set noerrorbells
set visualbell
set t_vb=
set tm=500

set cursorline
highlight LineNr ctermfg=blue
highlight CursorLine cterm=none ctermbg=none
highlight CursorLineNr ctermfg=green

let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode

" LOCAL OVERRIDES {{{1
let $LOCALFILE=expand("~/.vim/vimrc_local")
if filereadable($LOCALFILE)
    source $LOCALFILE
endif

" vim:foldmethod=marker
