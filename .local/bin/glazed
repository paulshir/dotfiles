#!/bin/bash

set -euo pipefail

# Applications {{{1
function yabai() {
  /usr/local/bin/yabai "$@"
}

function jq() {
  /usr/local/bin/jq "$@"
}

# Util {{{1
function not_null_or_exit() {
  echo "$1" | grep "null" && exit 0 || echo "$1"
}

# General Queries {{{1
function query_focused_space() {
  yabai -m query --spaces | jq '[.[] | select(."is-visible")][0] | .index'
}

function query_focused_window() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] | .id'
}

# Focus {{{1
# Window to right of focussed window, not overlapping
function query_window_right() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] as $aw | [.[] | select(.space == $aw.space and .frame.x >= ($aw.frame.x + $aw.frame.w))] | sort_by(.display, .frame.x, .frame.y, .id) | .[0].id'
}

function focus_window_right() {
  q=$(query_window_right)
  not_null_or_exit $q
  
  yabai -m window --focus $q
}

# Window to right of focused window, must be at least partially offset
function query_window_right_visible() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] as $aw | [.[] | select(.id != $aw.id and .space == $aw.space and (.frame.x + .frame.w) >= ($aw.frame.x + $aw.frame.w))] | sort_by(.display, .frame.x, .frame.y, .id) | .[0].id'
}

function focus_window_right_visible() {
  q=$(query_window_right_visible)
  not_null_or_exit $q
  
  yabai -m window --focus $q
}

function query_window_right_overlapping() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] as $aw | [.[] | select(.space == $aw.space)] | sort_by(.display, .frame.x, .frame.y, .id) | index($aw) as $awi | .[($awi+1)].id'
}

# Window to right of focused window, can be fully behind focused window
function focus_window_right_overlapping() {
  q=$(query_window_right_overlapping)
  not_null_or_exit $q
  
  yabai -m window --focus $q
}

function query_window_left() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] as $aw | [.[] | select(.space == $aw.space and (.frame.x+.frame.w) <= ($aw.frame.x))] | sort_by(.display, (-.frame.x-.frame.w), .frame.y, .id) | .[0].id'
}

function focus_window_left() {
  q=$(query_window_left)
  not_null_or_exit $q
  
  yabai -m window --focus $q
}

function query_window_left_visible() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] as $aw | [.[] | select(.id != $aw.id and .space == $aw.space and (.frame.x) <= ($aw.frame.x))] | sort_by(.display, (-.frame.x-.frame.w), .frame.y, .id) | .[0].id'
}

function focus_window_left_visible() {
  q=$(query_window_left_visible)
  not_null_or_exit $q
  
  yabai -m window --focus $q
}

function query_window_left_overlapping() {
  yabai -m query --windows | jq '[.[] | select(."has-focus")][0] as $aw | [.[] | select(.space == $aw.space)] | sort_by(.display, (-.frame.x-.frame.w), .frame.y, .id) | index($aw) as $awi | .[($awi+1)].id'
}

function focus_window_left_overlapping() {
  q=$(query_window_left_overlapping)
  not_null_or_exit $q
  
  yabai -m window --focus $q
}

# Resize {{{1
function resize_window_left_half() {
  open -g "rectangle-pro://execute-action?name=left-half"
}

function resize_window_right_half() {
  open -g "rectangle-pro://execute-action?name=right-half"
}

function resize_window_maximize() {
  open -g "rectangle-pro://execute-action?name=maximize"
}

function resize_window_center() {
  open -g "rectangle-pro://execute-action?name=center"
}

# Move {{{1

# Scracth {{{1
function title() {
  echo $1 | grep "null" > /dev/null && echo "null" || yabai -m query --windows --window "$1" | jq -r '.app'
}

function scratch() {
  echo "spc : $(query_focused_space)"
  echo "win : $(title $(query_focused_window))"
  echo "qwr : $(title $(query_window_right))"
  echo "qwrv : $(title $(query_window_right_visible))"
  echo "qwro: $(title $(query_window_right_overlapping))"
  echo "qwl : $(title $(query_window_left))"
  echo "qwlv: $(title $(query_window_left_visible))"
  echo "qwlo: $(title $(query_window_left_overlapping))"
}

# Run {{{1
sub=$1
shift
$sub "$@"